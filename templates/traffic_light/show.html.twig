{% extends 'traffic_light/layout.html.twig' %}

{% block main %}
    <h1>Traffic light "{{ traffic_light.state}}"</h1>
    <div class="row">
        <div class="col-md-4">
            <h2>Current Marking</h2>
            <p>
                <code>
                    AppBundle\Entity\TrafficLight::state
                </code>
                <br />
                =
                <br />
                <code>{{ traffic_light.state }}</code>
            </p>
            <p>
                <form action="{{ path('traffic_light_reset_marking', {id: traffic_light.id}) }}" method="post" class="form-inline">
                    <button type="submit" class="btn btn-danger btn-xs">Reset marking</button>
                </form>
            </p>
        </div>
        <div class="col-md-6">
            <h2>What can you do?</h2>
            <form action="{{ path('traffic_light_apply_transition', {id: traffic_light.id}) }}" method="post">
                <div class="btn-group-vertical" role="group">
                    {% for transition in workflow_all_transitions(traffic_light) %}
                        <button type="submit" name="transition" value="{{ transition.name }}"
                            {% if workflow_can(traffic_light, transition.name) -%}
                                class="btn btn-primary"
                            {%- else -%}
                                class="btn btn-danger" disabled="disabled"
                            {%- endif -%}
                        >
                            {{ transition.name }}
                        </button>
                    {% endfor %}
                </div>
            </form>
            <br />
            {% if not workflow_transitions(traffic_light) %}
                <strong>{{ 'no_transition_available'|trans }}</strong>
                <br />
                {{ 'try_as_another_user'|trans }}
            {% endif %}
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>


    $(function() {

        var name = "{{ traffic_light.state }}".replace(/[^\w]/i, '_').toLowerCase();
        var $svg = $('#state_machine-traffic_light');

        sha1(name).then(function (placeHash) {
            console.log(name, placeHash);
            let search = 'place_' + placeHash;
            console.log('searching for ' + search + ' in $svg');

            $('g.node title:contains("'+search +'")', $svg).each(function(j, place) {
                console.log("now looking for " + name);
                console.log(place);
                    console.log('found ' + name, j, place);
                    var place = $(place).parent();
                    var ref = $('ellipse', place);
                    ref.attr('stroke', 'red');
                    var newEllipse = ref.clone();
                    newEllipse.attr('rx', ref.attr('rx') * .9);
                    newEllipse.attr('ry', ref.attr('ry') * .9);
                    ref.after(newEllipse);
            });
        });

        // let placeHash = sha1(name);
        // let placeHash = crypto.createHash('sha1').update(name).digest("hex");
    });
    </script>
{% endblock %}
